# Generated by Django 5.2.4 on 2025-10-21 15:05

from django.db import migrations


def create_profiles(apps, schema_editor):
    User = apps.get_model("users", "User")
    JobSeeker = apps.get_model("users", "JobSeeker")
    Company = apps.get_model("users", "Company")
    CompanyRepresentative = apps.get_model("users", "CompanyRepresentative")

    # --- Create JobSeekers ---
    jobseekers = [
        {
            "email": "roan@gmail.com",
            "location": "New York",
            "field_name": "Engineering",
            "about": "Mechanical engineer passionate about product design.",
            "experience": [{"company": "BuildTech", "role": "Engineer", "years": "3"}],
            "education": [{"degree": "BSc Mechanical Engineering", "institution": "MIT", "year": "2018"}],
        },
        {
            "email": "cleo@gmail.com",
            "location": "Los Angeles",
            "field_name": "Design",
            "about": "Creative graphic designer focused on digital branding.",
            "experience": [{"company": "DesignCo", "role": "Graphic Designer", "years": "4"}],
            "education": [{"degree": "BA Graphic Design", "institution": "UCLA", "year": "2019"}],
        },
        {
            "email": "dora@gmail.com",
            "location": "Chicago",
            "field_name": "Marketing",
            "about": "Marketing strategist experienced in content and SEO.",
            "experience": [{"company": "Marketify", "role": "Marketing Specialist", "years": "5"}],
            "education": [{"degree": "MBA Marketing", "institution": "University of Chicago", "year": "2017"}],
        },
        {
            "email": "dean@gmail.com",
            "location": "Houston",
            "field_name": "Finance",
            "about": "Data-driven financial analyst skilled in risk management.",
            "experience": [{"company": "FinCorp", "role": "Financial Analyst", "years": "4"}],
            "education": [{"degree": "BCom Finance", "institution": "Rice University", "year": "2019"}],
        },
        {
            "email": "lea@gmail.com",
            "location": "Boston",
            "field_name": "Education",
            "about": "Passionate educator developing innovative teaching methods.",
            "experience": [{"company": "LearnWell", "role": "Teacher", "years": "6"}],
            "education": [{"degree": "MEd Education", "institution": "Harvard University", "year": "2016"}],
        },
    ]

    for js in jobseekers:
        try:
            user = User.objects.get(email=js["email"])
        except User.DoesNotExist:
            continue
        JobSeeker.objects.get_or_create(
            user=user,
            defaults={
                "location": js["location"],
                "field_name": js["field_name"],
                "about": js["about"],
                "experience": js["experience"],
                "education": js["education"],
            },
        )

    # --- Create Company Representatives ---
    companyreps = [
        {"email": "maya@gmail.com", "department": "Human Resources", "company": "Acme Corp"},
        {"email": "leo@gmail.com", "department": "Sales", "company": "Globex Inc"},
        {"email": "nora@gmail.com", "department": "Information Technology", "company": "Initech"},
        {"email": "oliver@gmail.com", "department": "Operations", "company": "Umbrella Corp"},
        {"email": "sophia@gmail.com", "department": "Finance", "company": "Stark Industries"},
    ]

    for rep in companyreps:
        try:
            user = User.objects.get(email=rep["email"])
            company = Company.objects.get(name=rep["company"])
        except (User.DoesNotExist, Company.DoesNotExist):
            continue

        CompanyRepresentative.objects.get_or_create(
            user=user,
            defaults={
                "company": company,
                "department": rep["department"],
            },
        )


def remove_profiles(apps, schema_editor):
    JobSeeker = apps.get_model("users", "JobSeeker")
    CompanyRepresentative = apps.get_model("users", "CompanyRepresentative")

    JobSeeker.objects.all().delete()
    CompanyRepresentative.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ("users", "0007_auto_20251021_1759"),
    ]

    operations = [
        migrations.RunPython(create_profiles, remove_profiles),
    ]
